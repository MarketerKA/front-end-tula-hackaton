# Generated by Django 5.1.3 on 2024-11-16 20:15

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('trash_app', '0003_remove_bid_amount_remove_bid_trash_can_bid_address_and_more'),
    ]

    operations = [
        migrations.RenameField(
            model_name='worker',
            old_name='location_after',
            new_name='location_image_after',
        ),
        migrations.RenameField(
            model_name='worker',
            old_name='location_before',
            new_name='location_image_before',
        ),
        migrations.RemoveField(
            model_name='worker',
            name='assigned_at',
        ),
        migrations.RemoveField(
            model_name='worker',
            name='bid',
        ),
        migrations.RemoveField(
            model_name='worker',
            name='completed_at',
        ),
        migrations.RemoveField(
            model_name='worker',
            name='datetime_after',
        ),
        migrations.RemoveField(
            model_name='worker',
            name='datetime_before',
        ),
        migrations.RemoveField(
            model_name='worker',
            name='status',
        ),
        migrations.AddField(
            model_name='bid',
            name='assigned_worker',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_bids', to='trash_app.worker'),
        ),
        migrations.AddField(
            model_name='worker',
            name='address',
            field=models.TextField(blank=True, max_length=255, null=True),
        ),
        migrations.AddField(
            model_name='worker',
            name='datetime_image_after',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='worker',
            name='datetime_image_before',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='worker',
            name='phone_number',
            field=models.CharField(blank=True, max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='bid',
            name='status',
            field=models.CharField(choices=[('pending', 'Рассматривается'), ('in_progress', 'В процессе'), ('completed', 'Выполнено'), ('declined', 'Отклонено')], default='pending', max_length=20),
        ),
        migrations.AlterField(
            model_name='worker',
            name='image_after',
            field=models.ImageField(blank=True, null=True, upload_to='before_after/'),
        ),
        migrations.AlterField(
            model_name='worker',
            name='image_before',
            field=models.ImageField(blank=True, null=True, upload_to='before_after/'),
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('operator', 'Operator'), ('worker', 'Worker')], default='worker', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, related_name='custom_user_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='custom_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.AlterField(
            model_name='bid',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bids', to='trash_app.user'),
        ),
        migrations.AlterField(
            model_name='worker',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='worker_profile', to='trash_app.user'),
        ),
        migrations.DeleteModel(
            name='TrashCan',
        ),
    ]
